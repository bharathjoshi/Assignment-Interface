{"version":3,"sources":["hoc/hoc.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","containers/Home.js","routes.js","containers/Layout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Hoc","props","children","authSuccess","user","type","token","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authSignup","username","email","password1","password2","is_student","axios","post","is_teacher","then","res","data","key","expirationDate","Date","getTime","setItem","JSON","stringify","catch","err","FormItem","Form","Item","antIcon","react_default","a","createElement","icon","style","fontSize","spin","NormalLoginForm","handleSubmit","e","preventDefault","_this","form","validateFields","values","onAuth","userName","password","history","push","errorMessage","this","message","getFieldDecorator","loading","indicator","es_form","onSubmit","className","rules","required","input","prefix","color","placeholder","es_button","htmlType","marginRight","react_router_dom","to","React","Component","WrappedNormalLoginForm","create","connect","state","auth","actions","Option","Select","RegistrationForm","confirmDirty","validateFieldsAndScroll","userType","confirm","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","Signup_FormItem","validator","onBlur","es_select","WrappedRegistrationForm","Home_FormItem","Home_Option","BaseRouter","hoc","react_router","path","component","Login","Signup","exact","HomepageLayout","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","onClick","padding","breadcrumb","margin","concat","userId","background","minHeight","textAlign","withRouter","App","onTryAutoSignup","routes","getItem","undefined","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","reducer","arguments","length","action","authStart","authLogout","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ced07585.chunk.js","sourcesContent":["const Hoc = props => props.children;\n\nexport default Hoc;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess =user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: user.token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2,is_student) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n        is_student: is_student,\n        is_teacher : !is_student\n      })\n      .then(res => {\n        const user = {\n          username , \n          token : res.data.key,\n          expirationDate : new Date(new Date().getTime() + 3600 * 1000),\n          is_student ,\n          is_teacher : !is_student\n        }\n        \n        localStorage.setItem('user',JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = localStorage.getItem(\"user\");\n    if (user === undefined || user === null ) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n","import React from \"react\";\nimport { Form, Icon, Input, Button, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>;\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        {errorMessage}\n        {this.props.loading ? (\n          <Spin indicator={antIcon} />\n        ) : (\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <FormItem>\n              {getFieldDecorator(\"userName\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ marginRight: \"10px\" }}\n              >\n                Login\n              </Button>\n              Or\n              <NavLink style={{ marginRight: \"10px\" }} to=\"/signup/\">\n                {\" \"}\n                signup\n              </NavLink>\n            </FormItem>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedNormalLoginForm);","import React from \"react\";\nimport { Form, Input, Icon, Button, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        let is_student = false;\n        if (values.userType === \"student\") is_student = true;\n        this.props.onAuth(\n          values.userName,\n          values.email,\n          values.password,\n          values.confirm,\n          is_student\n        );\n        // this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator(\"userName\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\"\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your password!\"\n              },\n              {\n                validator: this.validateToNextPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please confirm your password!\"\n              },\n              {\n                validator: this.compareToFirstPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              onBlur={this.handleConfirmBlur}\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"userType\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select a user!\"\n              }\n            ]\n          })(\n            <Select placeholder=\"Select a user type\">\n              <Option value=\"student\">Student</Option>\n              <Option value=\"teacher\">Teacher</Option>\n            </Select>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ marginRight: \"10px\" }}\n          >\n            Signup\n          </Button>\n          Or\n          <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\n            login\n          </NavLink>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2, is_student) =>\n      dispatch(\n        actions.authSignup(username, email, password1, password2, is_student)\n      )\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedRegistrationForm);","import React from \"react\";\nimport { Form, Input, Icon, Button, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        let is_student = false;\n        if (values.userType === \"student\") is_student = true;\n        this.props.onAuth(\n          values.userName,\n          values.email,\n          values.password,\n          values.confirm,\n          is_student\n        );\n        // this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator(\"userName\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\"\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your password!\"\n              },\n              {\n                validator: this.validateToNextPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please confirm your password!\"\n              },\n              {\n                validator: this.compareToFirstPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              onBlur={this.handleConfirmBlur}\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"userType\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select a user!\"\n              }\n            ]\n          })(\n            <Select placeholder=\"Select a user type\">\n              <Option value=\"student\">Student</Option>\n              <Option value=\"teacher\">Teacher</Option>\n            </Select>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ marginRight: \"10px\" }}\n          >\n            Signup\n          </Button>\n          Or\n          <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\n            login\n          </NavLink>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2, is_student) =>\n      dispatch(\n        actions.authSignup(username, email, password1, password2, is_student)\n      )\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedRegistrationForm);","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport HomepageLayout from \"./containers/Home\";\n\nconst BaseRouter = () => (\n  <Hoc>\n    <Route path=\"/login\" component={Login} />\n    <Route path=\"/signup\" component={Signup} />\n    <Route exact path=\"/\" component={HomepageLayout} />\n  </Hoc>\n);\n\nexport default BaseRouter;\n","import React from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"2\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            {this.props.isAuthenticated ? (\n              <Menu.Item key=\"2\" onClick={this.props.logout}>\n                Logout\n              </Menu.Item>\n            ) : (\n              <Menu.Item key=\"2\">\n                <Link to=\"/login\">Login</Link>\n              </Menu.Item>\n            )}\n          </Menu>\n        </Header>\n        <Content style={{ padding: \"0 50px\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\n            <Breadcrumb.Item>\n              <Link to=\"/\">Home</Link>\n            </Breadcrumb.Item>\n            {this.props.token !== null ? (\n              <Breadcrumb.Item>\n                <Link to={`/profile/${this.props.userId}`}>Profile</Link>\n              </Breadcrumb.Item>\n            ) : null}\n            {this.props.token !== null && this.props.is_teacher ? (\n              <Breadcrumb.Item>\n                <Link to=\"/create\">Create</Link>\n              </Breadcrumb.Item>\n            ) : null}\n          </Breadcrumb>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            {this.props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          Ant Design ©2016 Created by Ant UED\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId,\n    token: state.auth.token,\n    is_teacher: state.auth.is_teacher\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actions.logout())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CustomLayout)\n);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BaseRouter from \"./routes\";\nimport * as actions from \"./store/actions/auth\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport CustomLayout from \"./containers/Layout\";\nimport 'antd/dist/antd.css'\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  is_student : null ,\n  is_teacher : null,\n  token: null,\n  error: null,\n  loading: false ,\n  username : null\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.user.token,\n    username : action.user.username,\n    is_student : action.user.is_student,\n    is_teacher : action.user.is_teacher,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}